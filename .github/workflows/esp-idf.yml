# ESP-IDF Docker Build Workflow
# Builds ESP-IDF development image with pytest, QEMU, and testing tools
name: 🐳 ESP-IDF Docker Image

on:
  push:
    branches: [master, dev]
    paths:
      - '.github/workflows/esp-idf.yml'
      - 'images/esp-idf/**'
  pull_request:
    branches: [master, dev]
    paths:
      - '.github/workflows/esp-idf.yml'
      - 'images/esp-idf/**'
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: jethome-dev-esp-idf

jobs:
  build-esp-idf:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    strategy:
      matrix:
        platform: [linux/amd64, linux/arm64]
        esp_idf_version: ['v5.4.1']
    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4
        
      - name: 🔧 Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        
      - name: 🔐 Log in to GitHub Container Registry
        if: github.ref_name == 'master'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: 🏷️ Prepare platform tag
        id: platform
        run: |
          PLATFORM_PAIR=${{ matrix.platform }}
          PLATFORM_TAG=$(echo $PLATFORM_PAIR | sed 's/\//-/g')
          echo "tag=${PLATFORM_TAG}" >> $GITHUB_OUTPUT
          
      - name: 🐳 Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: images/esp-idf
          platforms: ${{ matrix.platform }}
          push: ${{ github.ref_name == 'master' }}
          tags: |
            ${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}:idf-${{ matrix.esp_idf_version }}-${{ steps.platform.outputs.tag }}
          cache-from: type=gha,scope=${{ env.IMAGE_NAME }}-${{ steps.platform.outputs.tag }}
          cache-to: type=gha,mode=max,scope=${{ env.IMAGE_NAME }}-${{ steps.platform.outputs.tag }}
          build-args: |
            ESP_IDF_VERSION=${{ matrix.esp_idf_version }}

  create-manifest:
    runs-on: ubuntu-latest
    needs: build-esp-idf
    if: github.ref_name == 'master'
    permissions:
      contents: read
      packages: write
    strategy:
      matrix:
        esp_idf_version: ['v5.4.1']
    steps:
      - name: 🔐 Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          
      - name: 🏷️ Generate version and date tags
        id: tags
        run: |
          SHA_SHORT=$(echo "${{ github.sha }}" | cut -c1-7)
          DATE_TAG=$(date +%Y.%m.%d)
          echo "sha_short=${SHA_SHORT}" >> $GITHUB_OUTPUT
          echo "date_tag=${DATE_TAG}" >> $GITHUB_OUTPUT
          
      - name: 🎯 Create multi-arch manifest
        run: |
          docker buildx imagetools create -t ${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}:latest \
            -t ${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}:stable \
            -t ${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}:idf-${{ matrix.esp_idf_version }} \
            -t ${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}:${{ steps.tags.outputs.date_tag }} \
            -t ${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}:sha-${{ steps.tags.outputs.sha_short }} \
            ${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}:idf-${{ matrix.esp_idf_version }}-linux-amd64 \
            ${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}:idf-${{ matrix.esp_idf_version }}-linux-arm64

  build-esp-matter:
    runs-on: ubuntu-latest
    needs: build-esp-idf
    permissions:
      contents: read
      packages: write
    strategy:
      matrix:
        platform: [linux/amd64, linux/arm64]
        esp_idf_version: ['v5.4.1']
        esp_matter_version: ['v1.4.2']
    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4
        
      - name: 🔧 Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        
      - name: 🔐 Log in to GitHub Container Registry
        if: github.ref_name == 'master'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: 🏷️ Prepare platform tag
        id: platform
        run: |
          PLATFORM_PAIR=${{ matrix.platform }}
          PLATFORM_TAG=$(echo $PLATFORM_PAIR | sed 's/\//-/g')
          echo "tag=${PLATFORM_TAG}" >> $GITHUB_OUTPUT
          
      - name: 🐳 Build and push ESP-Matter Docker image
        uses: docker/build-push-action@v5
        with:
          context: images/esp-matter
          platforms: ${{ matrix.platform }}
          push: ${{ github.ref_name == 'master' }}
          tags: |
            ${{ env.REGISTRY }}/${{ github.repository_owner }}/jethome-dev-esp-matter:idf-${{ matrix.esp_idf_version }}-matter-${{ matrix.esp_matter_version }}-${{ steps.platform.outputs.tag }}
          cache-from: type=gha,scope=esp-matter-${{ steps.platform.outputs.tag }}
          cache-to: type=gha,mode=max,scope=esp-matter-${{ steps.platform.outputs.tag }}
          build-args: |
            ESP_IDF_VERSION=${{ matrix.esp_idf_version }}
            ESP_MATTER_VERSION=${{ matrix.esp_matter_version }}

  create-manifest-matter:
    runs-on: ubuntu-latest
    needs: build-esp-matter
    if: github.ref_name == 'master'
    permissions:
      contents: read
      packages: write
    strategy:
      matrix:
        esp_idf_version: ['v5.4.1']
        esp_matter_version: ['v1.4.2']
    steps:
      - name: 🔐 Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          
      - name: 🏷️ Generate version and date tags
        id: tags
        run: |
          SHA_SHORT=$(echo "${{ github.sha }}" | cut -c1-7)
          DATE_TAG=$(date +%Y.%m.%d)
          echo "sha_short=${SHA_SHORT}" >> $GITHUB_OUTPUT
          echo "date_tag=${DATE_TAG}" >> $GITHUB_OUTPUT
          
      - name: 🎯 Create multi-arch manifest for ESP-Matter
        run: |
          docker buildx imagetools create -t ${{ env.REGISTRY }}/${{ github.repository_owner }}/jethome-dev-esp-matter:latest \
            -t ${{ env.REGISTRY }}/${{ github.repository_owner }}/jethome-dev-esp-matter:stable \
            -t ${{ env.REGISTRY }}/${{ github.repository_owner }}/jethome-dev-esp-matter:idf-${{ matrix.esp_idf_version }}-matter-${{ matrix.esp_matter_version }} \
            -t ${{ env.REGISTRY }}/${{ github.repository_owner }}/jethome-dev-esp-matter:matter-${{ matrix.esp_matter_version }} \
            -t ${{ env.REGISTRY }}/${{ github.repository_owner }}/jethome-dev-esp-matter:${{ steps.tags.outputs.date_tag }} \
            -t ${{ env.REGISTRY }}/${{ github.repository_owner }}/jethome-dev-esp-matter:sha-${{ steps.tags.outputs.sha_short }} \
            ${{ env.REGISTRY }}/${{ github.repository_owner }}/jethome-dev-esp-matter:idf-${{ matrix.esp_idf_version }}-matter-${{ matrix.esp_matter_version }}-linux-amd64 \
            ${{ env.REGISTRY }}/${{ github.repository_owner }}/jethome-dev-esp-matter:idf-${{ matrix.esp_idf_version }}-matter-${{ matrix.esp_matter_version }}-linux-arm64
