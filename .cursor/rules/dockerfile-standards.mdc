---
alwaysApply: true
---
# Dockerfile Standards

## General Guidelines

### Base Image
- Use slim variants to minimize image size
- Pin versions
- Document base image choice in README

### Build Arguments
- Use `ARG` for version pinning
- Provide sensible defaults
- Document all build args in README

### Environment Variables
- Centralize tool directories
- Set all relevant `ENV` variables at image level
- Document in README

### Layer Optimization
- Combine `RUN` commands where logical
- Clean up in same layer (`apt-get clean`, `rm -rf`)
- Use `--no-cache-dir` for pip installs

### Working Directory
- Set to `/workspace` for user projects
- Mount user code here as volume

### Verification
- Add verification `RUN` at end to check installations

### CI/CD Focus
- Optimize for automated builds
- Keep images small - don't pre-download large toolchains unless necessary
- Let frameworks download on first build (toolchains cache in volumes)

### Multi-Platform Builds

**QEMU Emulation Issues:**
- ARM64 builds under QEMU emulation can fail silently
- Scripts that source shell files (e.g., `source export.sh`) may exit immediately under QEMU
- Commands complete in ~0.1s indicate QEMU emulation failure

**Solutions:**
1. **Use direct venv paths for installations:**
   - Instead of: `bash -c '. ${IDF_PATH}/export.sh && pip install'`
   - Use: `/opt/esp/python_env/idf5.4_py3.12_env/bin/pip install`
   - This bypasses shell initialization that fails under QEMU

2. **For verification on amd64-only builds:**
   - Use: `bash -c '. ${IDF_PATH}/export.sh && pytest --version'`
   - Clean commands without hardcoded paths
   - Works because amd64 doesn't have QEMU emulation issues

3. **Consider amd64-only builds:**
   - If ARM64 emulation issues persist, build `linux/amd64` only
   - Docker Desktop on Mac M1/M2 runs amd64 via Rosetta 2 automatically
   - ARM64 Linux users can use Docker's built-in emulation
   - **Strategy:** Direct paths for install, sourced environment for verification

**Platform Configuration:**
```dockerfile
# In GitHub Actions workflow
platforms: linux/amd64  # or linux/amd64,linux/arm64 if both work
```
